(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{369:function(t,e,r){t.exports=r.p+"assets/img/3D.1e462ef4.png"},370:function(t,e,r){t.exports=r.p+"assets/img/frustum-1.5c46e119.png"},371:function(t,e,r){t.exports=r.p+"assets/img/frustum-2.620f4f20.png"},372:function(t,e,r){t.exports=r.p+"assets/img/frustum-3.666928a0.png"},403:function(t,e,r){"use strict";r.r(e);var _=r(46),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"历史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[t._v("#")]),t._v(" 历史")]),t._v(" "),_("p",[t._v("之前的三维程序都是运行在 OpenGL 和微软公司的 DirectX 上的，PC 端大型游戏都是在此基础上开发的。随着移动技术的发展，手机上有了许多使用三维程序的场景，所以 OpenGL 标准委员会就在之前的 OpenGL 基础上开发了一个缩减版的 OpenGL 叫做 OpenGL ES，目前智能手机操作系统都是基于 OpenGL ES 来开发三维程序的。")]),t._v(" "),_("p",[t._v("同时为了能在浏览器上运行三维程序，就在 OpenGL ES 2.0 的基础上开发出了 WebGL 标准，把 JavaScript 和 OpenGL ES 2.0 绑定起来。WebGL 可以为 HTML5-Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅的展示 3D 场景和模型了。")]),t._v(" "),_("p",[t._v("WebGL 的功能很强大，但是还是偏底层，开发时非常复杂且容易出错，Three.js 就是把 WebGL 包装了一层，可以让我们方便快速的实现常见功能。")]),t._v(" "),_("p",[_("img",{attrs:{src:r(369),alt:""}})]),t._v(" "),_("p",[t._v("Three.js 常见功能：")]),t._v(" "),_("ul",[_("li",[t._v("创建简单和复杂的三维几何图像")]),t._v(" "),_("li",[t._v("在三维场景下创建和移动物体")]),t._v(" "),_("li",[t._v("为物体添加纹理和材质")]),t._v(" "),_("li",[t._v("使用各种光源来装饰场景")]),t._v(" "),_("li",[t._v("加载三维软件所创建的模型")]),t._v(" "),_("li",[t._v("使用自定义的着色器")]),t._v(" "),_("li",[t._v("创建虚拟现实 (VR) 和增强现实 (AR) 场景")]),t._v(" "),_("li",[t._v("为三维场景添加高级的后期处理效果")]),t._v(" "),_("li",[t._v("创建点云（粒子系统）")])]),t._v(" "),_("h2",{attrs:{id:"_3d-美术知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3d-美术知识"}},[t._v("#")]),t._v(" 3D 美术知识")]),t._v(" "),_("p",[t._v("使用 Three.js 开发 3D 程序需要两方面的核心知识：")]),t._v(" "),_("ul",[_("li",[t._v("3D 美术知识：相机、光源、mesh、geomerty、material 等等，这些知识不止在 3D 程序中会用到，建模等场景也会使用，基础美术能力决定了你对 3D 的了解。计算机图形学也是用的这一套，可能会加入一些数学方面的知识。")]),t._v(" "),_("li",[t._v("JS 编程能力：知道如何使用 JS 进行面向对象编程，构建程序的时候，如何做到清晰的模块化，代码该如何组织，数据和视图如何绑定等等。")])]),t._v(" "),_("p",[t._v("下面是 3D 美术中的一些基础知识：")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("场景 (Scene)")]),t._v("：是物体、光源等元素的容器，可以配合 chrome 插件使用，抛出 window.scene 即可实时调整 obj 的信息和材质信息；")]),t._v(" "),_("li",[_("strong",[t._v("相机 (Camera)")]),t._v("：场景中的相机，代替人眼去观察，场景中只能添加一个；")]),t._v(" "),_("li",[_("strong",[t._v("物体对象 (Mesh)")]),t._v("：包括二维物体（点、线、面）、三维物体，模型等等；")]),t._v(" "),_("li",[_("strong",[t._v("光源 (Light)")]),t._v("：场景中的光照，如果不添加光照场景将会是一片漆黑，包括全局光、平行光、点光源等；")]),t._v(" "),_("li",[_("strong",[t._v("渲染器 (Renderer)")]),t._v(": 场景的渲染方式，如 webGL\\canvas2D\\Css3D；")]),t._v(" "),_("li",[_("strong",[t._v("控制器 (Control)")]),t._v(": 可通过键盘、鼠标控制相机的移动")])]),t._v(" "),_("h2",{attrs:{id:"对应的-three-js-中的功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对应的-three-js-中的功能"}},[t._v("#")]),t._v(" 对应的 Three.js 中的功能")]),t._v(" "),_("h3",{attrs:{id:"场景-scene"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#场景-scene"}},[t._v("#")]),t._v(" 场景 (Scene)")]),t._v(" "),_("p",[t._v("场景能够让你在什么地方、摆放什么东西来交给 three.js 来渲染，这是你放置物体、灯光和摄像机的地方。")]),t._v(" "),_("h3",{attrs:{id:"相机-camera"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相机-camera"}},[t._v("#")]),t._v(" 相机 (Camera)")]),t._v(" "),_("p",[t._v("threejs 中常用的相机有两种，透视相机和正交相机：")]),t._v(" "),_("p",[_("strong",[t._v("透视相机 (PerspectiveCamera)")])]),t._v(" "),_("p",[t._v("模拟人眼，近大远小，更适合 3D 渲染；")]),t._v(" "),_("p",[t._v("我们在创建透视相机的时候，需要定义一个视锥 (Frustum)，随后在渲染的时候，计算机会将视锥中的所有三维物体投影到我们的二维屏幕上。")]),t._v(" "),_("p",[_("img",{attrs:{src:r(370),alt:""}})]),t._v(" "),_("p",[_("img",{attrs:{src:r(371),alt:""}})]),t._v(" "),_("p",[_("strong",[t._v("正交相机 (OrthographicCamera)")])]),t._v(" "),_("p",[t._v("物体尺寸与镜头远近无关，主要被应用在 CAD 等这种需要精确测量物体尺寸的应用场景中；")]),t._v(" "),_("p",[t._v("正交相机的视锥是一个长方体：")]),t._v(" "),_("p",[_("img",{attrs:{src:r(372),alt:""}})]),t._v(" "),_("h3",{attrs:{id:"物体对象-mesh"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#物体对象-mesh"}},[t._v("#")]),t._v(" 物体对象 (Mesh)")]),t._v(" "),_("p",[t._v("在计算机的世界里，一条弧线是由有限个点构成的有限条线段连接得到的。当线段数量越多，长度就越短，当达到你无法察觉这是线段时，一条平滑的弧线就出现了。 计算机的三维模型也是类似的。只不过线段变成了平面，空间中确定一个平面最少需要三个点，所以普遍用三角形组成的网格来描述。我们把这种模型称之为 Mesh 模型。")]),t._v(" "),_("p",[t._v("在 threejs 中，Mesh = Geometry （几何体） + Material （材质） 。Geometry 就好像是骨架，材质则类似于皮肤。")]),t._v(" "),_("p",[t._v("threejs 中内置了许多基本的几何图元 (Primitives)，命名全部以"),_("code",[t._v("Geometry")]),t._v("结尾，我们可以使用这些图元快速创建常见的 Geometry：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("类型")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("BoxGeometry")]),t._v(" "),_("td",[t._v("立方体")])]),t._v(" "),_("tr",[_("td",[t._v("CircleGeometry")]),t._v(" "),_("td",[t._v("圆形")])]),t._v(" "),_("tr",[_("td",[t._v("ConeGeometry")]),t._v(" "),_("td",[t._v("圆锥体")])]),t._v(" "),_("tr",[_("td",[t._v("CylinderGeometry")]),t._v(" "),_("td",[t._v("圆柱体")])]),t._v(" "),_("tr",[_("td",[t._v("SphereGeometry")]),t._v(" "),_("td",[t._v("球体")])]),t._v(" "),_("tr",[_("td",[t._v("TetrahedronGeometry")]),t._v(" "),_("td",[t._v("四面体")])]),t._v(" "),_("tr",[_("td",[t._v("TorusGeometry")]),t._v(" "),_("td",[t._v("圆环体")])])])]),t._v(" "),_("p",[t._v("Material 代表三维物体的材质，不同的材质在光照下会呈现不一样的效果，通过材质，我们可以给物体设置不同的颜色、光泽度、贴图等等。")]),t._v(" "),_("p",[t._v("同样的，threejs 中内置了一些常用的材质函数：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("类型")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("PointsMaterial")]),t._v(" "),_("td",[t._v("点")])]),t._v(" "),_("tr",[_("td",[t._v("LineBasicMaterial")]),t._v(" "),_("td",[t._v("实线")])]),t._v(" "),_("tr",[_("td",[t._v("LineDashedMaterial")]),t._v(" "),_("td",[t._v("虚线")])]),t._v(" "),_("tr",[_("td",[t._v("MeshBasicMaterial")]),t._v(" "),_("td",[t._v("基础网格")])]),t._v(" "),_("tr",[_("td",[t._v("MeshPhongMaterial")]),t._v(" "),_("td",[t._v("Phong 网格（镜面高光）")])]),t._v(" "),_("tr",[_("td",[t._v("MeshLambertMaterial")]),t._v(" "),_("td",[t._v("Lambert 网格（非镜面高光）")])]),t._v(" "),_("tr",[_("td",[t._v("MeshStandardMaterial")]),t._v(" "),_("td",[t._v("标准物理网格（逼真，耗性能）")])]),t._v(" "),_("tr",[_("td",[t._v("MeshPhysicalMaterial")]),t._v(" "),_("td",[t._v("物理网格（逼真，耗性能）")])]),t._v(" "),_("tr",[_("td",[t._v("MeshToonMaterial")]),t._v(" "),_("td",[t._v("卡通效果")])])])]),t._v(" "),_("h3",{attrs:{id:"光源-light"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#光源-light"}},[t._v("#")]),t._v(" 光源 (Light)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("类型")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("AmbientLight")]),t._v(" "),_("td",[t._v("环境光")])]),t._v(" "),_("tr",[_("td",[t._v("PointLight")]),t._v(" "),_("td",[t._v("点光源")])]),t._v(" "),_("tr",[_("td",[t._v("SpotLight")]),t._v(" "),_("td",[t._v("聚光灯")])]),t._v(" "),_("tr",[_("td",[t._v("DirectionalLight")]),t._v(" "),_("td",[t._v("平行光")])]),t._v(" "),_("tr",[_("td",[t._v("HemisphereLight")]),t._v(" "),_("td",[t._v("自然光/半球光")])]),t._v(" "),_("tr",[_("td",[t._v("RectAreaLight")]),t._v(" "),_("td",[t._v("平面光")])])])]),t._v(" "),_("h3",{attrs:{id:"渲染器-renderer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#渲染器-renderer"}},[t._v("#")]),t._v(" 渲染器 (Renderer)")]),t._v(" "),_("p",[t._v("webGL 最常用。")]),t._v(" "),_("h2",{attrs:{id:"three-js-中的其他功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#three-js-中的其他功能"}},[t._v("#")]),t._v(" Three.js 中的其他功能")]),t._v(" "),_("h3",{attrs:{id:"加载外部模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加载外部模型"}},[t._v("#")]),t._v(" 加载外部模型")]),t._v(" "),_("p",[t._v("除了自建立方体之外，我们还可以加载外部模型，比如 C4D、3DMax 等创建好的复杂模型。")]),t._v(" "),_("p",[t._v("加载外部模型，是通过 Three.js 加载器 (Loader) 实现的，每个加载器对应某种特定的文件格式。加载器把文本/二进制的模型文件转化为 Three.js 对象结构。")]),t._v(" "),_("h3",{attrs:{id:"动画"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),_("p",[t._v("todo")]),t._v(" "),_("h3",{attrs:{id:"粒子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#粒子"}},[t._v("#")]),t._v(" 粒子")]),t._v(" "),_("p",[t._v("todo")]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.bilibili.com/video/BV1g44y1L7np?spm_id_from=333.337.search-card.all.click",target:"_blank",rel:"noopener noreferrer"}},[t._v("three.js 入门教程（合集）"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://juejin.cn/post/6844903425272987662",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebGL 技术储备指南"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.youtube.com/watch?v=3OYNerkxI-U&ab_channel=%E6%9E%81%E5%AE%A2%E6%B9%BEGeekerwan",target:"_blank",rel:"noopener noreferrer"}},[t._v("DirectX 和 OpenGL - 极客湾"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.bilibili.com/video/BV1zU4y1L7Go?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速上手 Three.js - 奇乐编程学院"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/puxiao/threejs-tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("puxiao - Github"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);